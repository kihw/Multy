// Package docs Code generated by swaggo/swag. DO NOT EDIT
package docs

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "termsOfService": "http://swagger.io/terms/",
        "contact": {
            "name": "API Support",
            "url": "http://www.swagger.io/support",
            "email": "support@swagger.io"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/focus/{keyword}": {
            "post": {
                "description": "Met en avant une fenêtre qui contient un mot-clé spécifique dans son titre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Windows"
                ],
                "summary": "Met en avant une fenêtre spécifique",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Mot-clé pour identifier la fenêtre",
                        "name": "keyword",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Fenêtre mise en avant avec succès",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Erreur lors de la mise en avant de la fenêtre",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/shortcut/register/{key}/{windowName}": {
            "post": {
                "description": "Registers a hotkey to focus on a window",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Shortcut"
                ],
                "summary": "Register a hotkey",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Key to register",
                        "name": "key",
                        "in": "path",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "Name of the window to focus",
                        "name": "windowName",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/shortcut/unregister": {
            "delete": {
                "description": "Unregisters a previously registered keyboard shortcut",
                "tags": [
                    "Shortcut"
                ],
                "summary": "Unregister an existing hotkey",
                "responses": {
                    "200": {
                        "description": "Raccourci désenregistré avec succès",
                        "schema": {
                            "type": "string"
                        }
                    },
                    "500": {
                        "description": "Failed to unregister shortcut",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        },
        "/start-turn/start": {
            "get": {
                "description": "Démarre le service pour écouter les événements d'une fenêtre spécifiée par son titre",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StartTurn"
                ],
                "summary": "Démarrer le service de détection d'événements pour une fenêtre spécifique",
                "parameters": [
                    {
                        "type": "string",
                        "description": "Titre de la fenêtre à surveiller",
                        "name": "windowTitle",
                        "in": "query",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "Service démarré avec succès",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur si le service est déjà en cours ou si windowTitle est manquant",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/start-turn/stop": {
            "get": {
                "description": "Arrête le service d'écoute des événements sur une fenêtre",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "StartTurn"
                ],
                "summary": "Arrêter le service de détection d'événements",
                "responses": {
                    "200": {
                        "description": "Service arrêté avec succès",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "400": {
                        "description": "Erreur si le service n'est pas en cours",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/wheelclick/start": {
            "post": {
                "description": "Listens for middle mouse clicks and triggers click simulation on Dofus windows.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WheelClick"
                ],
                "summary": "Start middle mouse click detection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/wheelclick/stop": {
            "post": {
                "description": "Stops the detection of middle mouse clicks.",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "WheelClick"
                ],
                "summary": "Stop middle mouse click detection",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Internal Server Error",
                        "schema": {
                            "type": "object",
                            "additionalProperties": {
                                "type": "string"
                            }
                        }
                    }
                }
            }
        },
        "/windows": {
            "get": {
                "description": "Obtient la liste des fenêtres actuellement ouvertes sur le système",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Windows"
                ],
                "summary": "Retourne la liste des fenêtres ouvertes",
                "responses": {
                    "200": {
                        "description": "Liste des fenêtres ouvertes",
                        "schema": {
                            "type": "array",
                            "items": {
                                "type": "string"
                            }
                        }
                    },
                    "500": {
                        "description": "Erreur lors de la récupération des fenêtres",
                        "schema": {
                            "type": "string"
                        }
                    }
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "localhost:8080",
	BasePath:         "/",
	Schemes:          []string{},
	Title:            "Multy API",
	Description:      "This is a sample server for managing shortcuts.",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
